micronaut:
  application:
    name: omar-prestager
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      redoc:
        paths: classpath:META-INF/swagger/views/redoc
        mapping: /redoc/**
      rapidoc:
        paths: classpath:META-INF/swagger/views/rapidoc
        mapping: /rapidoc/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**
#  server:
#    port: 8888
datasources:
  default:
    url: jdbc:postgresql://${omar.prestager.database.host}/${omar.prestager.database.name}
    driverClassName: org.postgresql.Driver
    username: ${omar.prestager.database.username}
    password: ${omar.prestager.database.password}
#    schema-generate: CREATE_DROP
    schema-generate: CREATE
    dialect: POSTGRES

omar:
  prestager:
    database:
      name: omardb-prestager
#      name: o2_omar_db
      username: postgres
      password: postgres
#      password: 'qKcSn=3G|3~54*gO'
      host: host.docker.internal
#      host: omar-3pa-dev-aurora-rdsdbcluster-nzw5yqvz2wso.cluster-cfussmnw2zzg.us-east-1.rds.amazonaws.com
      port: 5432
    process:
      pollEvery: '1s'
    index:
#      stagerAdress:  http://localhost/omar-services
      stagerAdress:  http://host.docker.internal/omar-services
      cron: '* * * * *'

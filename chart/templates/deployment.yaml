apiVersion: apps/v1
kind: Deployment
metadata:
  labels: {}
  name: {{ .Values.appName }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.appName }}
    spec:
      containers:
        - name:  {{ .Values.appName }}
          env:
          {{- include "unzip-and-ingest.envVars" . | indent 8 }}
          {{- if .Values.imageSkaffoldOverride }}
          image: {{ .Values.imageSkaffoldOverride }}
          {{- else }}
          image: "{{ .Values.global.dockerRepository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          livenessProbe:
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: {{ .Values.livenessProbe.port }}
              scheme: HTTP
          readinessProbe:
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: {{ .Values.readinessProbe.port }}
              scheme: HTTP
          ports:
            - containerPort: {{ .Values.internalPort }}
              protocol: TCP
          volumeMounts:
{{- include "unzip-and-ingest.volumeMounts" . | indent 12 }}
      dnsPolicy: ClusterFirst
        {{- if .Values.global.useImagePullSecret }}
      imagePullSecrets:
        - name: {{ .Values.appName }}-pull-secret
        {{- end }}
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
{{- include "unzip-and-ingest.volumes" . | indent 8 }}
